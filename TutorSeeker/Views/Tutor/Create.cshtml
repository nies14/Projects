@model TutorSeekerEntity.Tutor

@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@using (Html.BeginForm("Create", "Tutor", FormMethod.Post,
                                                new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <ul class="breadcrumb" style="font-size:15px;color:#000;">
            <li><a href="~/Home"><i class="fa fa-dashboard  fa-fw"></i>Home</a></li>
            <li><a href="~/Tutor">Tutor</a></li>
            <li class="active">Create</li>
            <hr class="subheaderHr" />
        </ul>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TutorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                <input type="password" name="TutorPassword" id="TutorPassword" class="form-control" />
                @Html.ValidationMessageFor(model => model.TutorPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2"><b>Confirm Password</b></p>
            <div class="col-md-7">
                <input type="password" name="confirmPassword" id="confirmPassword" onkeyup="check()" class="form-control" />
                <p class="text-danger" id="errorMessage"> </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorGender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorGender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorGender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorInstitute, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorInstitute, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorInstitute, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorDepartment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorDepartment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorDepartment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorPreferedClass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorPreferedClass, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorPreferedClass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorPreferedSubject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.TutorPreferedSubject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TutorPreferedSubject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TutorPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                <input class="form-control" type="file" name="file" id="file" style="width: 100%;" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-7">
                <input type="submit" value="Create Seeker" id="submitButton" class="btn btn-primary btn-lg" disabled />
            </div>
        </div>
    </div>
        <br />

}

@section scripts{
    <script>
        function check() {
            if (document.getElementById("TutorPassword").value == document.getElementById("confirmPassword").value) {
                document.getElementById("errorMessage").innerHTML = "";
                document.getElementById("submitButton").disabled = false;

            }
            else {

                document.getElementById("errorMessage").innerHTML = "Passwords do not match";
                document.getElementById("submitButton").disabled = true;

            }

        }
    </script>
}

@section Title{
    Create Tutor | Tutor Seeker
}